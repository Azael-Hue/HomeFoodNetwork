@model RecipeCreateViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="RecipeName" class="control-label">Recipe Name</label>
                <input asp-for="RecipeName" class="form-control" />
                <span asp-validation-for="RecipeName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label">Description</label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Ingredients" class="control-label">Ingredients</label>
                <input asp-for="Ingredients" class="form-control" />
                <span asp-validation-for="Ingredients" class="text-danger"></span>
            </div>

            <!--
                    STEPS
            -->
            <div class="form-group">
                <label class="control-label">Steps</label>
                <div id="stepsContainer">
                    <label>Step @Model.RecipeSteps[0].StepNumber </label>
                    <input asp-for="RecipeSteps[0].StepDescription" class="form-control" />
                    <span asp-validation-for="RecipeSteps[0].StepDescription" class="text-danger"></span>

                    @for(int i = 1; i < Model.RecipeSteps.Count; i++)
                    {
                        <div class="step-input">
                            <label>Step @Model.RecipeSteps[i].StepNumber</label>
                            <input asp-for="RecipeSteps[@i].StepDescription" class="form-control" />
                        </div>
                    }
                </div>
                <button type="button" class="btn btn-secondary mt-2" onclick="addStep()">Add Step</button>
            </div>

            <!--
                COOKING TIME
            -->

            <div class="form-group">
                <label asp-for="CookTimeHours" class="control-label">How many Hours to Cook:</label>
                <input type="number" asp-for="CookTimeHours" class="form-control"
                       placeholder="Hours" min="0" />
                <span asp-validation-for="CookTimeHours" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CookTimeMinutes" class="control-label">How many Minutes to Cook:</label>
                <input type="number" asp-for="CookTimeMinutes" class="form-control"
                       placeholder="Minutes" min="0" max="59" />
                <span asp-validation-for="CookTimeHours" class="text-danger"></span>
            </div>

            <br />
            <!--
                PREPING TIME
            -->

            <div class="form-group">
                <label asp-for="PrepTimeHours" class="control-label">How many Hours to Prepare:</label>
                <input type="number" asp-for="PrepTimeHours" class="form-control"
                       placeholder="Hours" min="0" />
                <span asp-validation-for="PrepTimeHours" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PrepTimeMinutes" class="control-label">How many minutes to prepare:</label>
                <input type="number" asp-for="PrepTimeMinutes" class="form-control"
                       placeholder="Minutes" min="0" max="59" />
                <span asp-validation-for="PrepTimeHours" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ServingSize" class="control-label">Serving Size</label>
                <input asp-for="ServingSize" class="form-control" />
                <span asp-validation-for="ServingSize" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Difficulty" class="control-label"></label>
                <div>
                    <div>
                        <input class="form-check-input" type="radio" asp-for="Difficulty" value="Easy" /> Easy
                    </div>
                    <div>
                        <input class="form-check-input" type="radio" asp-for="Difficulty" value="Medium" /> Medium
                    </div>
                    <div>
                        <input class="form-check-input" type="radio" asp-for="Difficulty" value="Hard" /> Hard
                    </div>
                </div>
                <span asp-validation-for="Difficulty" class="text-danger"></span>
            </div>

            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <br />

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        let stepCount = @Model.RecipeSteps?.Count ?? 1;

        function addStep() {
            
            // Find the last input field dynamically
            const lastInput = $('#stepsContainer .step-input:last-child input');

            if (lastInput.val().trim() === "") {
                alert("Please fill out the current step before adding a new one.");
                return;
            }

            stepCount++; // Increment the step count

            let step = `<div class="step-input" id="step-${stepCount}">
                            <label for="RecipeSteps[${stepCount - 1}].StepDescription">Step ${stepCount}</label>
                            <input type="text" name="RecipeSteps[${stepCount - 1}].StepDescription" class="form-control" placeholder="Enter step description" />
                            <button type="button" class="btn btn-danger mt-2" onclick="removeStep(${stepCount})">Remove</button>
                        </div>`;

            $(step).appendTo('#stepsContainer');
        }

        function removeStep(stepNumber) {
            if (stepCount === 1) {
                alert("You cannot remove the last step.");
                return;
            }   
            else {
                $(`#step-${stepNumber}`).remove();
                stepCount--;

                // Reorder remaining steps
                $('#stepsContainer .step-input').each((index, element) => {
                    $(element).attr('id', `step-${index + 1}`);
                    $(element).find('label').text(`Step ${index + 1}`);
                    $(element).find('input').attr('name', `RecipeSteps[${index}].StepDescription`);
                });
            };
        }
    </script>
}
