@model Recipe
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

@{
    ViewData["Title"] = "Details";
}

<div>

    <h1>@Model.RecipeName</h1>

    <hr />

    <dl class="row">

        <!-- Recipe Details -->
        <div class="row">

            <!-- The Recipe Description -->
            <div class="col-md-3 col-12">
                <dt class="col-sm-2">
                    <h5>Description</h5>
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
            </div>

            <!-- Recipe Time elements -->
            <div class="col-md-3">
                <dt class="col-sm-6">
                    <h5>Cook Time</h5>
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.CookTime)
                </dd>

                <dt class="col-sm-6">
                    <h5>Prep Time</h5>
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.PrepTime)
                </dd>

                <dt class="col-sm-6">
                    <h5>Total Time</h5>
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.TotalTime)
                </dd>
            </div>

            <!-- Serving size and difficulty -->
            <div class="col-md-3">

                <dt class="col-sm-6">
                    <h5>Serving Size</h5>
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.ServingSize)
                </dd>

                <dt class="col-sm-6">
                    <h5>Difficulty</h5>
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => model.Difficulty)
                </dd>

            </div>

            <!-- The Recipe ingredients listed with a checkbox so user can keep track -->
            <div class="col-md-3">

                <dt class="col-sm-2">
                    <h5>Ingredients</h5>
                </dt>

                <dd class="col-sm-10">
                    <ul class="list-unstyled">
                        @{
                            var ingredientList = Model.Ingredients
                            .Split(", ")
                            .ToList();
                            foreach (string ingredient in ingredientList)
                            {
                                <li class="align-items-center">
                                    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                                    <label class="form-check-label" for="flexCheckDefault">
                                        @ingredient.Trim()
                                    </label>
                                </li>
                            }
                        }
                    </ul>
                </dd>
            </div>

        </div>

        <!-- Recipe Steps -->
        <div>

            <dt class="col-sm-2">
                <h5>Steps</h5>
            </dt>

            <!-- loop through the all the steps to display each -->
            <dd class="col-sm-10">
                <ol>
                    @foreach (var step in Model.RecipeSteps.OrderBy(s => s.StepNumber))
                    {
                        <li>@step.StepDescription</li>
                    }
                </ol>
            </dd>

        </div>

    </dl>
</div>

<hr />

<!-- Check if the user is logged in and allow them to see the Edit and Delete button -->
<div>
    @{
        bool showLink = User.IsInRole(IdentityHelper.Admin) || User.IsInRole(IdentityHelper.User);
    }

    <a asp-action="Index">Back to List</a>

    @if (showLink)
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
        
        <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
    }
</div>